scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
library(tidyverse)
library(shiny)
library(plotly)
library(janitor)
library(scales)
library(countrycode)
library(StandardizeText)
library(RColorBrewer)
library(classInt)
library(scales)
library(grid)
library(directlabels)
library(ggthemes)
library(wesanderson)
us_china_totals <- read_csv("us_china_totals.csv")
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
df <- read_csv("us_china_totals.csv")
df <- df%>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
server <- function(input, output) {
df <- read_csv("us_china_totals.csv")
df <- df%>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
df <- read_csv("us_china_totals.csv"),
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(df[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- df%>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_total[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
library(tidyverse)
library(shiny)
library(plotly)
library(janitor)
library(scales)
library(countrycode)
library(StandardizeText)
library(RColorBrewer)
library(classInt)
library(scales)
library(grid)
library(directlabels)
library(ggthemes)
library(wesanderson)
us_china_totals <- read_csv("us_china_totals.csv")
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
us_china_totals <- read_csv("D-P-II-Final-Project/us_china_totals.csv")
# Interactive Plot of Trade Volume Between the US and China, using US--China trade flow data
setwd("D-P-II-Final-Project")
# Interactive Plot of Trade Volume Between the US and China, using US--China trade flow data
setwd("D-P-II-Final-Project")
setwd("D-P-II-Final-Project")
setwd("~/Desktop/Graduate School/Courses/Second Year/Winter Quarter/Data and Programming II/Final Project/D-P-II-Final-Project")
# Interactive Plot of Trade Volume Between the US and China, using US--China trade flow data
setwd("D-P-II-Final-Project")
setwd("D-P-II-Final-Project")
rm(list = ls())
# Interactive Plot of Trade Volume Between the US and China, using US--China trade flow data
us_china_totals <- read_csv("us_china_totals.csv")
library(tidyverse)
library(shiny)
library(plotly)
library(janitor)
library(scales)
library(countrycode)
library(StandardizeText)
library(RColorBrewer)
library(classInt)
library(scales)
library(grid)
library(directlabels)
library(ggthemes)
library(wesanderson)
# Interactive Plot of Trade Volume Between the US and China, using US--China trade flow data
us_china_totals <- read_csv("us_china_totals.csv")
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
us_china_totals <- read_csv("us_china_totals.csv")
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
library(tidyverse)
library(shiny)
library(plotly)
library(janitor)
library(scales)
library(countrycode)
library(StandardizeText)
library(RColorBrewer)
library(classInt)
library(scales)
library(grid)
library(directlabels)
library(ggthemes)
library(wesanderson)
us_china_totals <- read_csv("us_china_totals.csv")
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
library(tidyverse)
#library(shiny)
library(plotly)
library(janitor)
library(scales)
library(countrycode)
library(StandardizeText)
library(RColorBrewer)
library(classInt)
library(scales)
library(grid)
library(directlabels)
library(ggthemes)
library(wesanderson)
us_china_totals <- read_csv("us_china_totals.csv")
# Interactive Plot of Trade Volume Between the US and China, using US--China trade flow data
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
library(tidyverse)
library(shiny)
library(plotly)
library(janitor)
library(scales)
library(countrycode)
library(StandardizeText)
library(RColorBrewer)
library(classInt)
library(scales)
library(grid)
library(directlabels)
library(ggthemes)
library(wesanderson)
us_china_totals <- read_csv("us_china_totals.csv")
# Interactive Plot of Trade Volume Between the US and China, using US--China trade flow data
ui <- fluidPage(
selectInput(
inputId = "category",
label = "Choose an Import/Export Category",
choices = unique(us_china_totals[["section"]])
),
plotlyOutput("trade_table"),
tableOutput("cat_disp"),
)
server <- function(input, output) {
df <- us_china_totals %>%
group_by(section, time, type) %>%
summarise(total_value = sum(trade_value))
data <- reactive({
d <- filter(df, section == input$category)
return(d)
})
output$cat_disp <- renderTable({
data()
})
output$trade_table <- renderPlotly({
plt <- ggplot(data = data()) +
geom_bar(aes(time, total_value, fill = type), stat = "identity") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme_economist() +
labs(title = input$category, x = "Year", y = "Trade Volume") +
ggtitle("US-China Trade Flows by Product Category, 2017-2019") +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = wes_palette("GrandBudapest2", n = 2))
ggplotly(plt)
})
}
shinyApp(ui = ui, server = server)
library(tidyverse)
library(rworldmap)
library(shiny)
library(plotly)
library(tidytext)
library(textdata)
library(SnowballC)
library(udpipe)
library(ggraph)
library(igraph)
library(janitor)
library(stargazer)
library(modelr)
library(spData)
library(scales)
library(countrycode)
library(StandardizeText)
library(sf)
library(fastDummies)
library(plm)
library(RColorBrewer)
library(classInt)
library(scales)
library(grid)
library(directlabels)
library(ggthemes)
library(wesanderson)
library(kableExtra)
source('~/Desktop/Graduate School/Courses/Second Year/Winter Quarter/Data and Programming II/Final Project/D-P-II-Final-Project/NJacobs_Final_Project.R', echo=TRUE)
source('~/Desktop/Graduate School/Courses/Second Year/Winter Quarter/Data and Programming II/Final Project/D-P-II-Final-Project/NJacobs_Final_Project.R', echo=TRUE)
#write_csv(us_china_totals,"us_china_totals.csv")
write_csv(us_fdi, "us_fdi.csv")
write_csv(gdp_final, "gdp_final.csv")
write_csv(world_trade_final, "world_trade_final.csv")
runApp()
View(world_trade_mapping_17)
