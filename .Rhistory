scale_y_continuous(labels = dollar_format()) +
ggtitle("Change in Value of US Exports to China, Top 10 Categories in 2017 (USD)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "linen"), legend.position = "none")
us_china_totals_plotting %>% #Citation for data labeling: https://stackoverflow.com/questions/29357612/plot-labels-at-ends-of-lines
ggplot() +
geom_line(aes(x = time, y = total_volume, group = section, color = section)) +
geom_point(aes(x = time, y = total_volume, fill = total_volume)) +
geom_dl(aes(x = time, y = total_volume, label = section), method = list(dl.combine("last.points"), cex = 0.50, vjust = -0.75)) +
xlab("Year") +
ylab("Total Value of US Exports to China") +
theme_bw() +
scale_y_continuous(labels = comma) +
scale_y_continuous(labels = dollar_format()) +
ggtitle("Change in Value of US Exports to China, Top 10 Categories in 2017 (USD)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "linen"), legend.position = "none")
us_china_totals_plotting %>% #Citation for data labeling: https://stackoverflow.com/questions/29357612/plot-labels-at-ends-of-lines
ggplot() +
geom_line(aes(x = time, y = total_volume, group = section, color = section)) +
geom_point(aes(x = time, y = total_volume, fill = total_volume)) +
geom_dl(aes(x = time, y = total_volume, label = section), method = list(dl.combine("last.points"), cex = 0.50, vjust = -0.75)) +
xlab("Year") +
ylab("Total Value of US Exports to China") +
theme_bw() +
scale_y_continuous(labels = comma) +
scale_y_continuous(labels = dollar_format()) +
ggtitle("Change in Value of US Exports to China, Top 10 Categories in 2017 (USD)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "linen"), legend.position = "none")
world_trade_final %>%
filter(country_name == "United States" | country_name == "China") %>%
ggplot() +
geom_col(aes(x = year, y = trade_openness, fill = trade_openness)) +
geom_text(aes(x = year, y = trade_openness, label = round(trade_openness, 2), vjust = -1), color = "chocolate4") +
scale_fill_gradient(low = "red", high = "orange") +
xlab("Year") +
ylab("Ratio of Trade Volume to GDP") +
ylim(0, 0.5) +
ggtitle("Comparing US and Chinese Trade Openness, 2017-19") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "linen", color = "linen"), legend.position = "none") +
facet_wrap(~country_name) +
annotation_custom(world_avg)
shinyApp(ui = ui, server = server)
sentiments_function(peoplesdailymarch4_21)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments"))
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = count), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments"))
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments"))
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
theme(legend.position = "none")
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none")
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"))
return(sentiment_plot)
}
}
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"))
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(label=..count..)) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..)) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), vjust = 1, stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..)) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), vjust = -1, stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..)) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = 1) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -1) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.75) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.65) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.65, size = 7) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.65, size = 4) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.65, size = 2.5) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function(peoplesdailymarch4_21)
sentiments_function(peoplesdailysept28_18)
sentiments_function(nytsep25_18)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.65, size = 2.5) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("What Sentiments Do The NYT and People's Daily Express When Reporting the Trade War?")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.65, size = 2.5) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments Expressed by NYT and People's Daily") +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function <- function(article) {
text_data <- tibble(text = article)
word_tokens_df <- unnest_tokens(text_data, word_tokens, text, token = "words")
word_tokens_df_nsw <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
for (s in c("nrc", "afinn", "bing")) {
word_tokens_df_nsw <- word_tokens_df_nsw %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
sentiment_plot <- ggplot(data = filter(word_tokens_df_nsw, !is.na(nrc))) +
geom_histogram(aes(nrc, fill = nrc), stat = "count") +
geom_text(stat = "count", aes(nrc, label=..count..), vjust = -0.65, size = 2.5) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = ("Sentiments Expressed by NYT and People's Daily")) +
xlab("Sentiment") +
ylab("Count of Words") +
theme(legend.position = "none", panel.background = element_rect(fill = "aliceblue"), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
return(sentiment_plot)
}
}
sentiments_function(nyt2021)
summary(plm(formula = trade_openness ~ gdp, data = world_trade_final, effect = "individual"), index = c("country_name", "year"))
orld_trade_final %>%
filter(country_name == "United States" | country_name == "China") %>%
ggplot() +
geom_col(aes(x = year, y = trade_openness, fill = trade_openness)) +
geom_text(aes(x = year, y = trade_openness, label = round(trade_openness, 2), vjust = -1), color = "chocolate4") +
scale_fill_gradient(low = "red", high = "orange") +
xlab("Year") +
ylab("Ratio of Trade Volume to GDP") +
ylim(0, 0.5) +
ggtitle("Comparing US and Chinese Trade Openness, 2017-19") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "linen", color = "linen"), legend.position = "none") +
facet_wrap(~country_name) +
annotation_custom(world_avg)
world_trade_final %>%
filter(country_name == "United States" | country_name == "China") %>%
ggplot() +
geom_col(aes(x = year, y = trade_openness, fill = trade_openness)) +
geom_text(aes(x = year, y = trade_openness, label = round(trade_openness, 2), vjust = -1), color = "chocolate4") +
scale_fill_gradient(low = "red", high = "orange") +
xlab("Year") +
ylab("Ratio of Trade Volume to GDP") +
ylim(0, 0.5) +
ggtitle("Comparing US and Chinese Trade Openness, 2017-19") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "linen", color = "linen"), legend.position = "none") +
facet_wrap(~country_name) +
annotation_custom(world_avg)
?tribble
tribble(
country_name = "Libya", "Venezuela", "South Sudan")
tribble(
~country_name, ~year, ~gdp, ~gdpgrowth, ~gdppercap2010usd, ~gdppercapcurrentusd, ~percenttradegdp, ~country_code, ~exports_of_goods_and_services_current_us, ~imports_of_goods_and_services_bo_p_current_us,
~trade_openness,
"Libya", "Venezuela", "South Sudan")
tribble(
~country_name, ~year, ~gdp, ~gdpgrowth, ~gdppercap2010usd, ~gdppercapcurrentusd, ~percenttradegdp, ~country_code, ~exports_of_goods_and_services_current_us, ~imports_of_goods_and_services_bo_p_current_us,
~trade_openness,
"Libya", 2017, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
tribble(
~country_name, ~year, ~gdp, ~gdpgrowth, ~gdppercap2010usd, ~gdppercapcurrentusd, ~percenttradegdp, ~country_code, ~exports_of_goods_and_services_current_us, ~imports_of_goods_and_services_bo_p_current_us,
~trade_openness,
"Libya", 2017, 0,0,0,0,0,0,0,0,0)
styler:::style_active_file()
sentiments_function(peoplesdailymarch4_21)
sentiments_function(nytsep25_18)
sentiments_function(nyt2021)
